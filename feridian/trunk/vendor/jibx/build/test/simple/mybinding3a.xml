<!-- This checks using a <structure> to change only the ordering state, and
 using a homogeneous collection without specifying a type on the child value. -->
<binding>
  <mapping name="myelement" class="simple.MyClass3">
    <structure ordered="false">
      <value name="a" field="a" usage="optional"/>
      <value name="b" field="b" usage="optional"/>
      <value name="c" field="c" usage="optional"/>
      <value name="d" field="d" usage="optional"/>
    </structure>
    <value name="e" field="e" usage="optional" format="char.string"/>
    <structure name="dimension" field="dimen" value-style="attribute">
      <value name="width" field="width"/>
      <value name="height" field="height"/>
    </structure>
    <structure name="rectangle" field="rect" usage="optional">
      <value name="width" field="width" style="attribute"/>
      <value name="height" field="height" style="attribute"/>
      <value name="x" field="x"/>
      <value name="y" field="y"/>
    </structure>
    <collection item-type="java.lang.Integer" add-method="addInt"
        size-method="sizeInts" load-method="getInt">
      <value name="int"/>
    </collection>
  </mapping>
</binding>
